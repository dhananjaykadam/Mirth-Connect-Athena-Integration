<channel version="3.4.2">
  <id>d21730e8-be6f-4422-9f8f-65c6ca847764</id>
  <nextMetaDataId>2</nextMetaDataId>
  <name>CREATE NEW PRACTICE</name>
  <description>Add new practice to mirth connect</description>
  <enabled>true</enabled>
  <lastModified>
    <time>1492628373249</time>
    <timezone>Asia/Calcutta</timezone>
  </lastModified>
  <revision>13</revision>
  <sourceConnector version="3.4.2">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.vm.VmReceiverProperties" version="3.4.2">
      <pluginProperties/>
      <sourceConnectorProperties version="3.4.2">
        <responseVariable>d1</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
    </properties>
    <transformer version="3.4.2">
      <steps/>
      <inboundDataType>RAW</inboundDataType>
      <outboundDataType>RAW</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.4.2">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.4.2">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.4.2">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.4.2">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="3.4.2">
      <rules/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="3.4.2">
      <metaDataId>1</metaDataId>
      <name>Destination 1</name>
      <properties class="com.mirth.connect.connectors.jdbc.DatabaseDispatcherProperties" version="3.4.2">
        <pluginProperties/>
        <destinationConnectorProperties version="3.4.2">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
        </destinationConnectorProperties>
        <driver>com.mysql.jdbc.Driver</driver>
        <url>jdbc:mysql://localhost:3306/telehealth</url>
        <username>root</username>
        <password>admin</password>
        <query>var dbConn;
var responseObj = {};
responseObj.body = &quot;&lt;response&gt;FAILED&lt;/response&gt;&quot;;
responseObj.statusCode = &quot;400&quot;;

var newPractice = JSON.parse(connectorMessage.getRawData());
try {
    dbConn = DatabaseConnectionFactory.createDatabaseConnection($(&apos;DB_DRIVER&apos;), &apos;jdbc:mysql://&apos; + $(&apos;DB_HOST&apos;) + &apos;:&apos; + $(&apos;DB_PORT&apos;) + &apos;/&apos; + $(&apos;DB_NAME&apos;), $(&apos;DB_USERNAME&apos;), $(&apos;DB_PASSWORD&apos;));
    //	ADD NEW PRACTICE INTO EHR_ACCOUNTS TABLE
    var expression = &quot;INSERT INTO `ehr_account`(`id`,`ehr_type_id`,`is_enabled`,`is_locked`,`db_name`,`account_name`,`account_status`,`practice_id`,`internal_account_status`)VALUES(0 ,1,true,false,&apos;&quot; + newPractice.practiceID + &quot;&apos;  ,&apos;&quot; + newPractice.accountName + &quot;&apos; ,&apos;ACTIVE&apos; ,&apos;&quot; + newPractice.practiceID + &quot;&apos;,&apos;CREATED&apos;);&quot;;
    logger.info(expression);
    dbConn.executeUpdate(expression);
    // ADD AUTHENTICATION DETAILS OF PRACTICE
    expression = &quot;insert into ehr_auth_detail values(0,(select max(id) from ehr_account),&apos;&quot; + newPractice.clientSecret + &quot;&apos;,&apos;&quot; + newPractice.clientID + &quot;&apos;,null)&quot;;
    logger.info(expression);
    dbConn.executeUpdate(expression);

    //expression = &quot;insert into ehr_practice_detail values(0,(select max(id) from ehr_account),&apos;&quot; + newPractice.departmentId + &quot;&apos;,null,&apos;&quot; + newPractice.ehrType + &quot;&apos;)&quot;;
	expression=&quot;INSERT INTO ehr_practice_detail(`ehr_account_id`,`ehr_type`,`package`,`registration`,`duration`,`role`,`licenses`,`email`)VALUES((select max(id) from ehr_account),&apos;&quot;+newPractice.EHRType+&quot;&apos;,&apos;&quot;+newPractice.properties.package+&quot;&apos;,&apos;&quot;+newPractice.properties.registration+&quot;&apos;,&apos;&quot;+newPractice.properties.duration+&quot;&apos;,&apos;&quot;+newPractice.properties.role+&quot;&apos;,&apos;&quot;+newPractice.numberoflicenses+&quot;&apos;,&apos;&quot;+newPractice.email+&quot;&apos;);&quot;;
    logger.info(expression);
    dbConn.executeUpdate(expression);

    responseObj.body = &apos;&lt;response&gt;SUCCESS&lt;/response&gt;&apos;;
    responseObj.statusCode = &quot;201&quot;;
} catch (e) {
    logger.info(e);
} finally {
    if (dbConn) {
        dbConn.close();
    }
    return JSON.stringify(responseObj);
}
return JSON.stringify(responseObj);</query>
        <useScript>true</useScript>
      </properties>
      <transformer version="3.4.2">
        <steps/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="3.4.2">
        <steps/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="3.4.2">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="3.4.2">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="3.4.2">
        <rules/>
      </filter>
      <transportName>Database Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="3.4.2">
    <clearGlobalChannelMap>true</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>false</storeAttachments>
    <tags class="linked-hash-set"/>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="3.4.2">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <archiveEnabled>true</archiveEnabled>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <codeTemplateLibraries/>
</channel>